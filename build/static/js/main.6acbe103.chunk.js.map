{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","patra","id","name","email","CardList","patras","map","SearchBox","placeHolder","handleChange","type","placeholder","onChange","App","e","setState","searchField","target","value","state","console","log","fetch","then","response","json","users","this","filteredPatras","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mUAIaA,EAAO,SAAAC,GAAK,OACvB,sBAAKC,UAAU,iBAAf,UACE,qBACEC,IAAI,QACJC,IAAG,+BAA0BH,EAAMI,MAAMC,GAAtC,4BAEL,mCAAML,EAAMI,MAAME,KAAlB,OACA,kCAAKN,EAAMI,MAAMG,MAAjB,WCJSC,G,MAAW,SAAAR,GAAK,OAC3B,qBAAKC,UAAU,YAAf,SACGD,EAAMS,OAAOC,KAAI,SAAAN,GAAK,OACrB,cAAC,EAAD,CAAqBA,MAAOA,GAAjBA,EAAMC,WCPVM,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OACrB,uBACIZ,UAAU,SACVa,KAAK,SACLC,YAAaH,EACbI,SAAUH,MCwCHI,E,kDAxCb,aAAc,IAAD,8BACX,gBAgBFJ,aAAe,SAACK,GACd,EAAKC,SAAS,CAACC,YAAYF,EAAEG,OAAOC,SAfpC,EAAKC,MAAQ,CACXd,OAAQ,GACRW,YAAa,IALJ,E,qDASb,WAAoB,IAAD,OACjBI,QAAQC,IAAI,6BACZC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKX,SAAS,CAACV,OAAQqB,S,oBAQxC,WAAS,IAAD,EACwBC,KAAKR,MAA5Bd,EADD,EACCA,OAAQW,EADT,EACSA,YACTY,EAAiBvB,EAAOwB,QAAO,SAAA7B,GAAK,OACxCA,EAAME,KAAK4B,cAAcC,SAASf,EAAYc,kBAE9C,OAEA,sBAAKjC,UAAU,MAAf,UACE,6DACA,cAAC,EAAD,CACEW,YAAY,4BACZC,aAAgBkB,KAAKlB,eAGvB,cAAC,EAAD,CAAUJ,OAAQuB,W,GArCRI,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.6acbe103.chunk.js","sourcesContent":["import React from 'react';\n\nimport './card.styles.css';\n\nexport const Card = props => (\n  <div className='card-container'>\n    <img\n      alt='patra'\n      src={`https://robohash.org/${props.patra.id}?set=set2&size=180x180`}\n    />\n    <h2> {props.patra.name} </h2>\n    <p> {props.patra.email} </p>\n  </div>\n);","\nimport React from 'react';\n\nimport { Card } from '../card/card.component';\n\nimport './card-list.styles.css';\n\nexport const CardList = props => (\n  <div className='card-list'>\n    {props.patras.map(patra => (\n      <Card key={patra.id} patra={patra} />\n    ))}\n  </div>\n);","import React from 'react'\nimport './search-box.style.css'\n\nexport const SearchBox = ({placeHolder, handleChange}) => (\n    <input \n        className='Search'\n        type='search'\n        placeholder={placeHolder}\n        onChange={handleChange}\n    />\n)","import './App.css';\nimport { Component } from 'react';\n\nimport {CardList} from './components/card-list/card-list.component';\nimport {SearchBox} from './components/search-box/search-box.component';\n//import {SeacchBox} from './components/search-box/search-box.component'\nclass App extends Component{\n\n  constructor(){\n    super();\n\n    this.state = {\n      patras: [],\n      searchField: ''\n    };\n  }\n\n  componentDidMount(){\n    console.log('--------did mount--------');\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json() )\n    .then(users => this.setState({patras: users}));\n\n  }\n\n  handleChange = (e) => {\n    this.setState({searchField:e.target.value});\n  }\n\n  render(){\n    const {patras, searchField} = this.state;\n    const filteredPatras = patras.filter(patra => \n      patra.name.toLowerCase().includes(searchField.toLowerCase())\n      );    \n      return(\n        \n      <div className=\"App\">\n        <h1>Ramyana Characters (Patras)</h1>\n        <SearchBox\n          placeHolder='search ramayana character'\n          handleChange = {this.handleChange}\n        />\n\n        <CardList patras={filteredPatras}/>          \n    </div>\n    )\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}